[General]
network = JolieAndDrones
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))
#scheduler-class = "cRealTimeScheduler"
#realtimescheduler-scaling=0.5

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
tkenv-plugin-path = ../../../etc/plugins

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false

**.numDrones = 8

# status
**.hasStatus = true
**.displayEnergyStorages = true

#**.dcf.maxQueueSize = -1


# power
#**.host*.energyStorageType = "SimpleEpEnergyStorage"
#**.host*.**.energyConsumerType = "StateBasedEpEnergyConsumer"
#**.host*.energyManagementType = "SimpleEpEnergyManagement"
#**.host*.energyStorage.nominalCapacity = 130000J
#**.host*.energyManagement.nodeShutdownCapacity = 0J
#**.host*.energyManagement.nodeStartCapacity = 0J
#**.host*.energyStorage.initialCapacity = uniform(120000J, this.nominalCapacity)
#**.host*.energyGeneratorType = "AlternatingEpEnergyGenerator"
#**.host*.energyGenerator.energySinkModule = "^.energyStorage"
#**.host*.energyGenerator.powerGeneration = 1mW
#**.host*.energyGenerator.sleepInterval = exponential(10s)
#**.host*.energyGenerator.generationInterval = exponential(10s)

# ping app (host[0] pinged by others)
**.gateway.numApps = 1
**.gateway.app[0].typename = "UdpBasicAppJolie"
**.gateway.app[0].localPort = 100
**.gateway.app[0].destPort = 100
**.gateway.app[0].sendInterval = truncnormal(1s, 0.1s)
**.gateway.app[0].messageLength = 1000B
**.gateway.app[0].startTime = 0s
**.gateway.app[0].stopTime = -1s
**.gateway.app[0].receiveBroadcast = true

**.gateway.app[0].implementLocalJolie = true
#scheduler-class = "cRealTimeScheduler"
#realtimescheduler-scaling=0.5

#**.gateway.app[0].policyType = "DETECT_ALONE"
**.gateway.app[0].policyType = "DETECT_FOCUS"
#**.gateway.app[0].policyType = "IMAGE_ALONE"
#**.gateway.app[0].policyType = "IMAGE_FOCUS"

**.gateway.app[0].coapServerLoopTimer = 0.05

**.gateway.app[0].jolieAddress = "192.168.1.176"
**.gateway.app[0].jolieAddressPort = 5683
#**.gateway.app[0].jolieAddressPort = 9142
**.gateway.app[0].gatewayRealAddress = "192.168.1.177"
**.gateway.app[0].gatewayRealAddressPort = 5683
**.gateway.app[0].droneRegisterStringTemplate = "{\"address\":\"datagram://%s:%d\",\"id\":%d}"
**.gateway.app[0].dronePositionStringTemplate = "{\"uav\":{\"id\":%d},\"position\":{\"x\":%.02lf,\"y\":%.02lf}}"
**.gateway.app[0].droneEnergyStringTemplate = "{\"uav\":{\"id\":%d},\"energy\":{\"percentage\":%.02lf}}"
**.gateway.app[0].droneAlertStringTemplate = "{\"uav\":{\"id\":%d},\"position\":{\"x\":%.02lf,\"y\":%.02lf},\"result\":{\"accuracy\":%.02lf,\"class\":\"%s\"}}"
**.gateway.app[0].droneImageStringTemplateP1 = "{\"uav\":{\"id\":%d},\"image\":{\"base64\":\""
**.gateway.app[0].droneImageStringTemplateP2 = "\"}}"
**.gateway.app[0].droneStatsStringTemplate = "{\"alarm\":{\"start\":%ld}}"

**.gateway.app[0].logFilePositions = "logFilePositions.txt"

**.gateway.app[0].alarmPositionX = uniform(0, 400)
**.gateway.app[0].alarmPositionY = uniform(0, 400)
**.gateway.app[0].alarmGaussDeviationDistance = 80
**.gateway.app[0].alarmMaxAccuracyCloud = truncnormal(70, 5)#70
**.gateway.app[0].alarmMaxAccuracyDrone = truncnormal(50, 5)#50
**.gateway.app[0].alarmGaussDeviationMax = 4
**.gateway.app[0].googleImageTime = 0.5s
**.gateway.app[0].uavFocusRadius = 1.2

**.gateway.app[0].detectPeriodShort = 3s
**.gateway.app[0].imagePeriodShort = 3s
**.gateway.app[0].detectPeriodLong = 10s
**.gateway.app[0].imagePeriodLong = 10s

**.gateway.app[0].detectThreshold = 40
**.gateway.app[0].focusActivationThreshold = 30

**.gateway.app[0].coverStiffness = 1
**.gateway.app[0].focusStiffness = 2
**.gateway.app[0].stopStiffness = 3

**.gateway.app[0].finalAlarmDelayTime = 1s
**.gateway.app[0].focusTime = 30s
**.gateway.app[0].limitFocusOffset = 10s

# ping app (host[0] pinged by others)
**.host*.numApps = 1
**.host*.app[0].typename = "UdpBasicAppDrone"
**.host*.app[0].localPort = 100
**.host*.app[0].destPort = 100
**.host*.app[0].sendInterval = truncnormal(1s, 0.1s)
**.host*.app[0].messageLength = 1000B
**.host*.app[0].startTime = uniform(1s, 5s)
**.host*.app[0].stopTime = -1s
**.host*.app[0].receiveBroadcast = true
**.host*.app[0].mobility_timeout = 0.1
**.host*.app[0].thresholdPositionUpdate = 1m
**.host*.app[0].thresholdEnergyUpdate = 1
#**.host*.app[0].detectionTime = truncnormal(2s, 0.2s)
**.host*.app[0].detectionTime = 2s
**.host*.app[0].uavImageSize = 100B

**.app[0].uavRadiusSensor = 50m
**.app[0].alarmTime = 100s
**.app[0].neigh_timeout = 10

# mobility
#**.host*.mobilityType = "MassMobility"
#**.host*.mobility.initFromDisplayString = false
#**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
#**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
#**.host*.mobility.speed = truncnormal(20mps, 8mps)
#**.host*.mobility.updateInterval = 100ms

**.ip.forceBroadcast = true

**.gateway.mobility.typename = "StationaryMobility"
# place it at a fixed position:
**.gateway.mobility.initialX = 200m
**.gateway.mobility.initialY = 200m
**.gateway.mobility.initFromDisplayString = false

**.host*.mobility.typename = "VirtualSpringMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.initialX = uniform(150m, 250m)
**.host*.mobility.initialY = uniform(150m, 250m)
**.host*.mobility.maxspeed = 5mps
**.host*.mobility.motorConsumption = 2W

#**.host*.mobilityType = "StationaryMobility"
# place it at a fixed position:
#**.host*.mobility.initialX = uniform(0m, 100m)
#**.host*.mobility.initialY = uniform(0m, 100m)
#**.host*.mobility.initFromDisplayString = false


# nic settings
**.wlan[*].opMode = "g(mixed)"
**.wlan[*].bitrate = 54Mbps

**.wlan[*].mgmt.frameCapacity = 10

**.wlan[*].mac.address = "auto"
#**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.maxQueueSize = -1
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinBroadcast = 31

**.wlan[*].**.maxQueueSize = -1

**.wlan[*].radio.transmitter.power = 100mW
**.wlan[*].radio.receiver.sensitivity = -85dBm
**.wlan[*].radio.receiver.snirThreshold = 4dB

# medium settings
*.radioMedium.backgroundNoise.power = -100dBm
**radioMedium.pathLoss.alpha = 2.3

[Config TestBase]
#extends = General
description = "TestBase"


**.app[*].*.statistic-recording = true
**.app[*].*.scalar-recording = true
**.app[*].*.vector-recording = true

sim-time-limit = 600s

**.numDrones = 10

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m

**.gateway.mobility.initialX = 200m
**.gateway.mobility.initialY = 200m

**.host*.mobility.initialX = uniform(150m, 250m)
**.host*.mobility.initialY = uniform(150m, 250m)

**.gateway.app[0].alarmPositionX = uniform(100, 300)
**.gateway.app[0].alarmPositionY = uniform(100, 300)

#**.gateway.app[0].policyType = "DETECT_ALONE"
#**.gateway.app[0].policyType = "DETECT_FOCUS"
**.gateway.app[0].policyType = "IMAGE_ALONE"
#**.gateway.app[0].policyType = "IMAGE_FOCUS"

**.app[0].alarmTime = 100s

**.gateway.app[0].alarmGaussDeviationDistance = 80
**.gateway.app[0].alarmMaxAccuracyCloud = truncnormal(60, 5)
**.gateway.app[0].alarmMaxAccuracyDrone = truncnormal(40, 5)
**.gateway.app[0].googleImageTime = 0.5s

**.gateway.app[0].detectPeriodShort = 5s
**.gateway.app[0].imagePeriodShort = 5s
**.gateway.app[0].detectPeriodLong = 10s
**.gateway.app[0].imagePeriodLong = 10s

**.gateway.app[0].detectThreshold = 40
**.gateway.app[0].focusActivationThreshold = 20

**.gateway.app[0].finalAlarmDelayTime = 1s
**.gateway.app[0].focusTime = 60s
**.gateway.app[0].limitFocusOffset = 30s

**.host*.app[0].uavImageSize = 100kB
**.host*.app[0].uavImageFragment = 2048B

**.gateway.app[0].logFilePositions = "${resultdir}/${configname}/logFilePositions-${runnumber}.txt"

output-vector-file = "${resultdir}/${configname}/${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${runnumber}.sca"


[Config TestOk]
extends = TestBase
description = "TestOk"

sim-time-limit = 300s

**.app[*].*.statistic-recording = true
**.app[*].*.scalar-recording = true
**.app[*].*.vector-recording = true

repeat = 12

**.host*.app[0].uavImageSize = 1MB

**.numDrones = ${ND=5,10,15,20}

**.gateway.app[0].policyType = "${PT=DETECT_ALONE, DETECT_FOCUS, IMAGE_ALONE, IMAGE_FOCUS}"

**.gateway.app[0].alarmGaussDeviationDistance = 60
**.gateway.app[0].alarmMaxAccuracyCloud = truncnormal(60, 5)
**.gateway.app[0].alarmMaxAccuracyDrone = truncnormal(40, 5)
**.gateway.app[0].detectThreshold = 30
**.gateway.app[0].focusActivationThreshold = 15

**.gateway.app[0].logFilePositions = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/logFilePositions-${ND}-${PT}-${runnumber}.txt"

output-vector-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.vec"
output-scalar-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.sca"


[Config TestOkAll]
extends = TestBase
description = "TestOkAll"

sim-time-limit = 300s

**.app[*].*.statistic-recording = true
**.app[*].*.scalar-recording = true
**.app[*].*.vector-recording = true

repeat = 24

**.host*.app[0].uavImageSize = 1MB

**.host*.app[0].startTime = uniform(1s, 20s)

**.numDrones = ${ND=5,10,15,20,25}

**.gateway.app[0].policyType = "${PT=DETECT_ALONE, DETECT_FOCUS, IMAGE_ALONE, IMAGE_FOCUS, STIMULUS, AOB}"

**.app[0].uavRadiusSensor = 50m

**.gateway.app[0].alarmGaussDeviationDistance = 50
**.gateway.app[0].alarmMaxAccuracyCloud = truncnormal(60, 5)
**.gateway.app[0].alarmMaxAccuracyDrone = truncnormal(50, 5)
**.gateway.app[0].detectThreshold = 40
**.gateway.app[0].focusActivationThreshold = 30

**.gateway.app[0].focusTime = 60s
**.gateway.app[0].limitFocusOffset = 20s

**.app[0].alarmTime = 150s

**.gateway.app[0].logFilePositions = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/logFilePositions-${ND}-${PT}-${runnumber}.txt"

output-vector-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.vec"
output-scalar-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.sca"

[Config TestStim]
extends = TestBase
description = "TestStim"

sim-time-limit = 200s

**.app[*].*.statistic-recording = true
**.app[*].*.scalar-recording = true
**.app[*].*.vector-recording = true

**.host*.app[0].uavImageSize = 1MB

**.numDrones = ${ND=10}

**.gateway.app[0].policyType = "${PT=STIMULUS}"

**.gateway.app[0].alarmGaussDeviationDistance = 60
**.gateway.app[0].alarmMaxAccuracyCloud = truncnormal(60, 5)
**.gateway.app[0].alarmMaxAccuracyDrone = truncnormal(40, 5)
**.gateway.app[0].detectThreshold = 30
**.gateway.app[0].focusActivationThreshold = 15

**.gateway.app[0].logFilePositions = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/logFilePositions-${ND}-${PT}-${runnumber}.txt"

output-vector-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.vec"
output-scalar-file = "/media/angelo/BigLinux/Documents/SimulationsData/2018-WCNC-JIoT/results/${configname}/${ND}-${PT}-${runnumber}.sca"